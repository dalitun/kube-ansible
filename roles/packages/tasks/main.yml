---
# Download component task

- name: Override local repository url
  when: 'pkg is defined and repos_offline'
  set_fact:
    pkg_bases: >
      {{ pkg_bases |
         combine({ pkg.name: {
             'url': repos_offline_url,
             'version': pkg_bases[pkg.name]['version']
         }})
      }}

- name: Create download binaries tmp directory
  when: pkg is defined
  file: path="{{ download_tmp }}" state=directory

- name: "Check {{ pkg.description }} already exists"
  when: pkg is defined
  stat: path="{{ download_tmp }}/{{ item }}"
  with_items: "{{ pkg['items'] }}"
  register: pkg_check

#- name: "Downloading {{ pkg.description }}"
#  when: pkg is defined and not item.stat.exists
#  get_url:
#    url: "{{ pkg.url }}/{{ item.item }}"
#    dest: "{{ download_tmp }}"
#    validate_certs: False
#  with_items: "{{ pkg_check.results }}"
#  register: pkg_download

- name: "Downloading {{ pkg.description }}"
  when: pkg is defined and not item.stat.exists
  shell: cd {{ download_tmp }} && wget ----no-check-certificate  {{ pkg.url }}/{{ item.item }} 
  with_items: "{{ pkg_check.results }}"
  register: pkg_download

- name: "Create {{ pkg.description }} release directory"
  when: pkg is defined
  file: path="{{ pkg.dir }}" state=directory

- name: "Extract {{ pkg.description }} file"
  when: 'pkg is defined and "unarchive" in pkg'
  unarchive:
    src: "{{ download_tmp }}/{{ item }}"
    dest: "{{ pkg.dir }}"
    copy: no
    extra_opts: "{{ pkg.unarchive.extra_opt }}"
  with_items: "{{ pkg['items'] }}"

- name: "Copy {{ pkg.description }} file to release directory"
  when: 'pkg is defined and "unarchive" not in pkg'
  copy:
    src: "{{ download_tmp }}/{{ item }}"
    dest: "{{ pkg.dir }}/"
    owner: root
    group: root
    mode: 0755
    remote_src: True
  with_items: "{{ pkg['items'] }}"